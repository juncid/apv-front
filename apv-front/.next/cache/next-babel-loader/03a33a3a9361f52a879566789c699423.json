{"ast":null,"code":"import _defineProperty from \"C:/Users/juanc/source/repos/apv-front/apv-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TerminosModal from \"./TerminosModal\";\nimport React, { useState, useEffect } from \"react\";\nimport { Field } from \"formik\";\nimport { Wizard, WizardStep } from \"./WizardComponent\";\nimport { Step1Schema, Step2Schema, Step3Schema } from \"../utils/validationSchemaWizard\";\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\n\nvar APVForm = function APVForm(props) {\n  _s();\n\n  var aacento = \"\\xE1\";\n  var eacento = \"\\xE9\";\n  var iacento = \"\\xED\";\n  var oacento = \"\\xF3\";\n  var uacento = \"\\xFA\";\n  var router = useRouter();\n  var initialValues = {\n    nombre: '',\n    rut: '',\n    correo: '',\n    celular: '',\n    sueldo: '',\n    ahorro: '',\n    terminosycondiciones: false\n  };\n\n  var _useState = useState(false),\n      modalShow = _useState[0],\n      setModalShow = _useState[1];\n\n  var handleClose = function handleClose() {\n    return setModalShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setModalShow(true);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"wizardForm\",\n    children: /*#__PURE__*/_jsxs(Wizard, {\n      initialValues: initialValues,\n      onSubmit: function onSubmit(values) {\n        var headers = {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(props.token)\n        };\n        var url = 'https://apvbackendmanager.azurewebsites.net/ApvSimulacion/ingresarsimulacion';\n        var body = {\n          nombre: values.nombre,\n          rut: values.rut,\n          correo: values.correo,\n          celular: values.celular,\n          sueldo: values.sueldo,\n          ahorro: values.ahorro\n        };\n        axios.post(url, body, {\n          headers: headers\n        }).then(function (response) {\n          var data = response.data;\n\n          if (data.idSimulacion) {\n            router.push({\n              pathname: \"/resultado\",\n              as: \"resultado/\",\n              query: {\n                id: data.idSimulacion\n              }\n            });\n          }\n        })[\"catch\"](function (e) {\n          console.log(e);\n        });\n      },\n      children: [/*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step1 onSubmit');\n        },\n        validationSchema: Step1Schema,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"sueldo\",\n            className: \"control-label\",\n            children: \"sueldo\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"sueldo\",\n            children: function children(_ref) {\n              var field = _ref.field,\n                  _ref$form = _ref.form,\n                  touched = _ref$form.touched,\n                  errors = _ref$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({\n                  type: \"text\"\n                }, field), {}, {\n                  className: \"form-control form-control-lg \\n                                            \".concat(touched.sueldo ? errors.sueldo ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"sueldo\",\n                  \"aria-describedby\": \"sueldoAyuda\",\n                  placeholder: \"Sueldo L\\uFFFDquido\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"sueldoAyuda\",\n                  className: \"form-text \\n                                                    \".concat(touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\"),\n                  children: touched.sueldo && errors.sueldo ? errors.sueldo : \"El sueldo l�quido que recibes luego de los descuentos legales.\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"ahorro\",\n            className: \"control-label\",\n            children: \"Monto Ahorro\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"ahorro\",\n            children: function children(_ref2) {\n              var field = _ref2.field,\n                  _ref2$form = _ref2.form,\n                  touched = _ref2$form.touched,\n                  errors = _ref2$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  className: \"form-control form-control-lg \".concat(touched.ahorro ? errors.ahorro ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"ahorro\",\n                  \"aria-describedby\": \"ahorroAyuda\",\n                  placeholder: \"Ahorro Mensual\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"ahorroAyuda\",\n                  className: \"form-text \".concat(touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"),\n                  children: touched.ahorro && errors.ahorro ? errors.ahorro : \"El monto en pesos que invertir�as en tu APV.\"\n                })]\n              });\n            }\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step2 onSubmit');\n        },\n        validationSchema: Step2Schema,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"nombre\",\n            className: \"control-label\",\n            children: \"Nombre\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"nombre\",\n            children: function children(_ref3) {\n              var field = _ref3.field,\n                  _ref3$form = _ref3.form,\n                  touched = _ref3$form.touched,\n                  errors = _ref3$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  className: \"form-control form-control-lg \".concat(touched.nombre ? errors.nombre ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"nombre\",\n                  \"aria-describedby\": \"nombreAyuda\",\n                  placeholder: \"Nombre\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"nombreAyuda\",\n                  className: \"form-text \".concat(touched.nombre && errors.nombre ? \"is-invalid\" : \"\"),\n                  children: touched.nombre && errors.nombre ? errors.nombre : \"Indicanos tu nombre y apellido.\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"rut\",\n            className: \"control-label\",\n            children: \"RUT\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"rut\",\n            children: function children(_ref4) {\n              var field = _ref4.field,\n                  _ref4$form = _ref4.form,\n                  touched = _ref4$form.touched,\n                  errors = _ref4$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  className: \"form-control form-control-lg \".concat(touched.rut ? errors.rut ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"rut\",\n                  \"aria-describedby\": \"rutAyuda\",\n                  placeholder: \"RUT\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"rutAyuda\",\n                  className: \"form-text \".concat(touched.rut && errors.rut ? \"is-invalid\" : \"\"),\n                  children: touched.rut && errors.rut ? errors.rut : \"Ej. 12345678-9.\"\n                })]\n              });\n            }\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(WizardStep, {\n        onSubmit: function onSubmit() {\n          return console.log('Step3 onSubmit');\n        },\n        validationSchema: Step3Schema,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"correo\",\n            className: \"control-label\",\n            children: \"Correo\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"correo\",\n            children: function children(_ref5) {\n              var field = _ref5.field,\n                  _ref5$form = _ref5.form,\n                  touched = _ref5$form.touched,\n                  errors = _ref5$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"email\",\n                  className: \"form-control form-control-lg \".concat(touched.correo ? errors.correo ? 'is-invalid' : 'is-valid' : ''),\n                  id: \"correo\",\n                  \"aria-describedby\": \"correoAyuda\",\n                  placeholder: \"Correo\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"correoAyuda\",\n                  className: \"form-text \".concat(touched.correo && errors.correo & \"is-invalid\"),\n                  children: touched.correo && errors.correo ? errors.correo : \"Ej. aumentatusueldo@afpmodelo.cl\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-group input-wrapper\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"celular\",\n            className: \"control-label\",\n            children: \"Celular\"\n          }), /*#__PURE__*/_jsx(Field, {\n            name: \"celular\",\n            children: function children(_ref6) {\n              var field = _ref6.field,\n                  _ref6$form = _ref6.form,\n                  touched = _ref6$form.touched,\n                  errors = _ref6$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                  type: \"text\",\n                  className: \"form-control form-control-lg \".concat(touched.celular ? errors.celular ? \"is-invalid\" : \"is-valid\" : \"\"),\n                  id: \"celular\",\n                  \"aria-describedby\": \"celularAyuda\",\n                  placeholder: \"Celular\"\n                })), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"celularAyuda\",\n                  className: \"form-text \".concat(touched.celular && errors.celular && \"is-invalid\"),\n                  children: touched.celular && errors.celular ? errors.celular : \"Ej. 9111223XX\"\n                })]\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsx(Field, {\n            name: \"terminosycondiciones\",\n            children: function children(_ref7) {\n              var field = _ref7.field,\n                  _ref7$form = _ref7.form,\n                  touched = _ref7$form.touched,\n                  errors = _ref7$form.errors;\n              return /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsxs(\"label\", {\n                  className: \"form-check-label mt-auto\",\n                  htmlFor: \"terminosycondiciones\",\n                  children: [/*#__PURE__*/_jsx(\"input\", _objectSpread(_objectSpread({}, field), {}, {\n                    type: \"checkbox\",\n                    className: \"form-check-input\"\n                  })), /*#__PURE__*/_jsxs(\"small\", {\n                    className: \"terminosycondiciones\",\n                    children: [\"Acepto las\", \" \", /*#__PURE__*/_jsxs(\"a\", {\n                      onClick: handleShow,\n                      children: [\"condiciones del servicio y la pol\", iacento, \"tica de privacidad.\"]\n                    })]\n                  })]\n                }), /*#__PURE__*/_jsx(\"small\", {\n                  id: \"terminosAyuda\",\n                  className: \"form-text \\n                            \".concat(touched.terminosycondiciones && errors.terminosycondiciones ? 'is-invalid' : ''),\n                  children: touched.terminosycondiciones && errors.terminosycondiciones ? errors.terminosycondiciones : \"\"\n                }), /*#__PURE__*/_jsx(TerminosModal, {\n                  show: modalShow,\n                  onHide: handleClose\n                })]\n              });\n            }\n          })\n        })]\n      })]\n    })\n  });\n};\n\n_s(APVForm, \"EV0MGmTTwwqHOXQpo05xZB0fEAg=\", false, function () {\n  return [useRouter];\n});\n\n_c = APVForm;\nexport default APVForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"APVForm\");","map":{"version":3,"sources":["C:/Users/juanc/source/repos/apv-front/apv-front/components/ApvForm.js"],"names":["TerminosModal","React","useState","useEffect","Field","Wizard","WizardStep","Step1Schema","Step2Schema","Step3Schema","useRouter","axios","APVForm","props","aacento","eacento","iacento","oacento","uacento","router","initialValues","nombre","rut","correo","celular","sueldo","ahorro","terminosycondiciones","modalShow","setModalShow","handleClose","handleShow","values","headers","token","url","body","post","then","response","data","idSimulacion","push","pathname","as","query","id","e","console","log","field","form","touched","errors"],"mappings":"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","sourcesContent":["import TerminosModal from \"./TerminosModal\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { Wizard, WizardStep } from \"./WizardComponent\";\r\nimport { Step1Schema, Step2Schema, Step3Schema } from \"../utils/validationSchemaWizard\";\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\n\r\nconst APVForm = (props) => {\r\n\r\n    const aacento = \"\\u00e1\";\r\n    const eacento = \"\\u00e9\";\r\n    const iacento = \"\\u00ed\";\r\n    const oacento = \"\\u00f3\";\r\n    const uacento = \"\\u00fa\";\r\n\r\n    const router = useRouter();\r\n\r\n    const initialValues = {\r\n        nombre: '',\r\n        rut: '',\r\n        correo: '',\r\n        celular: '',\r\n        sueldo: '',\r\n        ahorro: '',\r\n        terminosycondiciones: false\r\n    };\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n\r\n    return (\r\n        <div className='wizardForm'>\r\n            <Wizard\r\n                initialValues={initialValues}\r\n                onSubmit={values => {\r\n                    const headers = {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${props.token}`\r\n                    };\r\n\r\n                    const url = 'https://apvbackendmanager.azurewebsites.net/ApvSimulacion/ingresarsimulacion';\r\n\r\n                    const body = {\r\n                        nombre: values.nombre,\r\n                        rut: values.rut,\r\n                        correo: values.correo,\r\n                        celular: values.celular,\r\n                        sueldo: values.sueldo,\r\n                        ahorro: values.ahorro\r\n                    };\r\n\r\n                    axios\r\n                        .post(url, body, { headers: headers })\r\n                        .then((response) => {\r\n                            let data = response.data;\r\n\r\n\r\n                            if (data.idSimulacion) {\r\n                                router.push({\r\n                                    pathname: \"/resultado\",\r\n                                    as: \"resultado/\",\r\n                                    query: {\r\n                                        id: data.idSimulacion,\r\n                                    },\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n                }}\r\n            >\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step1 onSubmit')}\r\n                    validationSchema={Step1Schema}\r\n                >\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"sueldo\"\r\n                            className={\"control-label\"}>sueldo\r\n                                </label>\r\n                        <Field name=\"sueldo\"\r\n                        >\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            {...field}\r\n                                            className={\r\n                                                `form-control form-control-lg \r\n                                            ${touched.sueldo ? (errors.sueldo ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"sueldo\"\r\n                                            aria-describedby=\"sueldoAyuda\"\r\n                                            placeholder=\"Sueldo L�quido\"\r\n                                        />\r\n                                        <small\r\n                                            id=\"sueldoAyuda\"\r\n                                            className={`form-text \r\n                                                    ${touched.sueldo && errors.sueldo ? \"is-invalid\" : \"\"}`}\r\n                                        >\r\n                                            {touched.sueldo && errors.sueldo\r\n                                                ? errors.sueldo\r\n                                                : \"El sueldo l�quido que recibes luego de los descuentos legales.\"}\r\n                                        </small>\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"ahorro\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Monto Ahorro\r\n                                </label>\r\n                        <Field name=\"ahorro\">\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <input\r\n                                            {...field}\r\n                                            type=\"text\"\r\n                                            className={`form-control form-control-lg ${touched.ahorro ? (errors.ahorro ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"ahorro\"\r\n                                            aria-describedby=\"ahorroAyuda\"\r\n                                            placeholder=\"Ahorro Mensual\"\r\n                                        />\r\n                                        <small\r\n                                            id=\"ahorroAyuda\"\r\n                                            className={`form-text ${touched.ahorro && errors.ahorro ? \"is-invalid\" : \"\"}`}\r\n                                        >\r\n                                            {touched.ahorro && errors.ahorro\r\n                                                ? errors.ahorro\r\n                                                : \"El monto en pesos que invertir�as en tu APV.\"}\r\n                                        </small>\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                </WizardStep>\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step2 onSubmit')}\r\n                    validationSchema={Step2Schema}\r\n                >\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"nombre\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Nombre\r\n                                </label>\r\n                        <Field name=\"nombre\">\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <input\r\n                                            {...field}\r\n                                            type=\"text\"\r\n                                            className={`form-control form-control-lg ${touched.nombre ? (errors.nombre ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"nombre\"\r\n                                            aria-describedby=\"nombreAyuda\"\r\n                                            placeholder=\"Nombre\"\r\n                                        />\r\n                                        <small\r\n                                            id=\"nombreAyuda\"\r\n                                            className={`form-text ${touched.nombre && errors.nombre ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                        >\r\n                                            {touched.nombre && errors.nombre\r\n                                                ? errors.nombre\r\n                                                : \"Indicanos tu nombre y apellido.\"}\r\n                                        </small>\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"rut\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            RUT\r\n                                </label>\r\n                        <Field name=\"rut\">\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <input\r\n                                            {...field}\r\n                                            type=\"text\"\r\n                                            className={`form-control form-control-lg ${touched.rut ? (errors.rut ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"rut\"\r\n                                            aria-describedby=\"rutAyuda\"\r\n                                            placeholder=\"RUT\"\r\n                                        />\r\n                                        <small\r\n                                            id=\"rutAyuda\"\r\n                                            className={`form-text ${touched.rut && errors.rut ? \"is-invalid\" : \"\"}`}\r\n                                        >\r\n                                            {touched.rut && errors.rut\r\n                                                ? errors.rut\r\n                                                : \"Ej. 12345678-9.\"}\r\n                                        </small>\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                </WizardStep>\r\n                <WizardStep\r\n                    onSubmit={() => console.log('Step3 onSubmit')}\r\n                    validationSchema={Step3Schema}\r\n                >\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"correo\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Correo\r\n                                </label>\r\n                        <Field name=\"correo\">\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <input\r\n                                            {...field}\r\n                                            type=\"email\"\r\n                                            className={`form-control form-control-lg ${touched.correo ? (errors.correo ? 'is-invalid' : 'is-valid') : ''\r\n                                                }`}\r\n                                            id=\"correo\"\r\n                                            aria-describedby=\"correoAyuda\"\r\n                                            placeholder=\"Correo\"\r\n                                        />\r\n                                        <small\r\n                                            id=\"correoAyuda\"\r\n                                            className={`form-text ${touched.correo && errors.correo & \"is-invalid\"}`}\r\n                                        >\r\n                                            {touched.correo && errors.correo\r\n                                                ? errors.correo\r\n                                                : \"Ej. aumentatusueldo@afpmodelo.cl\"}\r\n                                        </small>\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group input-wrapper\">\r\n                        <label\r\n                            htmlFor=\"celular\"\r\n                            className=\"control-label\"\r\n                        >\r\n                            Celular\r\n                                </label>\r\n                        <Field name=\"celular\">\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <input\r\n                                            {...field}\r\n                                            type=\"text\"\r\n                                            className={`form-control form-control-lg ${touched.celular ? (errors.celular ? \"is-invalid\" : \"is-valid\") : \"\"}`}\r\n                                            id=\"celular\"\r\n                                            aria-describedby=\"celularAyuda\"\r\n                                            placeholder=\"Celular\"\r\n                                        />\r\n                                        <small\r\n                                            id=\"celularAyuda\"\r\n                                            className={`form-text ${touched.celular && errors.celular && \"is-invalid\"}`}\r\n                                        >\r\n                                            {touched.celular && errors.celular ? errors.celular : \"Ej. 9111223XX\"}\r\n                                        </small>\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n\r\n                        <Field name=\"terminosycondiciones\">\r\n                            {({\r\n                                field,\r\n                                form: { touched, errors },\r\n                            }) => (\r\n                                    <>\r\n                                        <label\r\n                                            className=\"form-check-label mt-auto\"\r\n                                            htmlFor=\"terminosycondiciones\"\r\n                                        >\r\n                                            <input\r\n                                                {...field}\r\n                                                type=\"checkbox\"\r\n                                                className=\"form-check-input\"\r\n                                            />\r\n                                            <small className=\"terminosycondiciones\">\r\n                                                Acepto las{\" \"}\r\n                                                <a\r\n                                                    onClick={handleShow}\r\n                                                >\r\n                                                    condiciones del servicio y la pol{iacento}\r\n                                                        tica de privacidad.\r\n                                                    </a>\r\n                                            </small>\r\n                                        </label>\r\n                                        <small\r\n                                            id=\"terminosAyuda\"\r\n                                            className={\r\n                                                `form-text \r\n                            ${touched.terminosycondiciones && errors.terminosycondiciones\r\n                                                    ? 'is-invalid' : ''}`}\r\n                                        >\r\n                                            {touched.terminosycondiciones && errors.terminosycondiciones\r\n                                                ? errors.terminosycondiciones\r\n                                                : \"\"}\r\n                                        </small>\r\n                                        <TerminosModal\r\n                                            show={modalShow}\r\n                                            onHide={handleClose}\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                        </Field>\r\n                    </div>\r\n                </WizardStep>\r\n            </Wizard>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default APVForm;"]},"metadata":{},"sourceType":"module"}